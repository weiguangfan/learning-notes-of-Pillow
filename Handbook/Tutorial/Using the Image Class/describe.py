"""
Python Imaging Library 中最重要的类是 Image 类，定义在同名的模块中。
你可以通过几种方式来创建这个类的实例；
或者从文件中加载图像，处理其他图像，或者从头开始创建图像。


"""
from PIL import Image

# 要从文件中加载图像，请使用 Image 模块中的 open() 函数。
im = Image.open('../../../female.jpg')
print(im)
# 如果成功，这个函数返回一个图像对象。现在你可以使用实例属性来检查文件内容:
print(im.mode)
print(im.size)
print(im.format)
"""
format属性标识了图像的来源。
如果图像不是从文件中读取的，它被设置为None。
size属性是一个包含宽度和高度（单位：像素）的2元组。
mode属性定义了图像中带的数量和名称，以及像素类型和深度。
常见的模式是灰度图像的 "L"（亮度），真彩色图像的 "RGB"，以及印前图像的 "CMYK"。

如果文件不能被打开，就会产生一个 OSError 异常。

一旦你有了一个图像类的实例，你就可以使用这个类所定义的方法来处理和操作图像。
例如，让我们来显示我们刚刚加载的图像。
"""
im.show()
"""
show()的标准版本效率不高，
因为它将图像保存到一个临时文件中，
并调用一个工具来显示图像。
如果你没有安装一个合适的工具，
它甚至不会工作。
不过，当它工作时，
它对于调试和测试来说是非常方便的。

下面几节概述了这个库中提供的不同功能：

"""